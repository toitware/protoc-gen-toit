// Code generated by protoc-gen-toit. DO NOT EDIT.
// source: nesting.proto

import encoding.protobuf as _protobuf
import core as _core

// ENUM START: MyEnum
MyEnum_UNKNOWN/int/*enum<MyEnum>*/ ::= 0
MyEnum_SET/int/*enum<MyEnum>*/ ::= 1
// ENUM END: .MyEnum

// MESSAGE START: .Foo
class Foo extends _protobuf.Message:
  s/string := ""

  constructor
      --s/string?=null:
    if s != null:
      this.s = s

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        s = r.read_primitive _protobuf.PROTOBUF_TYPE_STRING

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_STRING s --as_field=1

  num_fields_set -> int:
    return (s.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_STRING s --as_field=1)

// MESSAGE END: .Foo

// MESSAGE START: .InnerMessage
// ENUM START: InnerMessage_MyEnum
InnerMessage_MyEnum_UNKNOWN/int/*enum<InnerMessage_MyEnum>*/ ::= 0
// ENUM END: .InnerMessage.MyEnum

// MESSAGE START: .InnerMessage.Foo
class InnerMessage_Foo extends _protobuf.Message:
  i/int/*enum<InnerMessage_MyEnum>*/ := 0

  constructor
      --i/int?/*enum<InnerMessage_MyEnum>?*/=null:
    if i != null:
      this.i = i

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        i = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM i --as_field=1

  num_fields_set -> int:
    return (i == 0 ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM i --as_field=1)

// MESSAGE END: .InnerMessage.Foo

class InnerMessage extends _protobuf.Message:
  foo/InnerMessage_Foo := InnerMessage_Foo
  enum/int/*enum<InnerMessage_MyEnum>*/ := 0

  constructor
      --foo/InnerMessage_Foo?=null
      --enum/int?/*enum<InnerMessage_MyEnum>?*/=null:
    if foo != null:
      this.foo = foo
    if enum != null:
      this.enum = enum

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        foo = InnerMessage_Foo.deserialize r
      r.read_field 2:
        enum = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    foo.serialize w --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM enum --as_field=2

  num_fields_set -> int:
    return (foo.is_empty ? 0 : 1)
      + (enum == 0 ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_embedded_message (foo.protobuf_size) --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM enum --as_field=2)

// MESSAGE END: .InnerMessage

// MESSAGE START: .Message
class Message extends _protobuf.Message:
  foo/Foo := Foo
  enum/int/*enum<MyEnum>*/ := 0

  constructor
      --foo/Foo?=null
      --enum/int?/*enum<MyEnum>?*/=null:
    if foo != null:
      this.foo = foo
    if enum != null:
      this.enum = enum

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        foo = Foo.deserialize r
      r.read_field 2:
        enum = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    foo.serialize w --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM enum --as_field=2

  num_fields_set -> int:
    return (foo.is_empty ? 0 : 1)
      + (enum == 0 ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_embedded_message (foo.protobuf_size) --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM enum --as_field=2)

// MESSAGE END: .Message

